[supervisord]
nodaemon=true
user=root
logfile=/var/log/supervisor/supervisord.log
pidfile=/var/run/supervisord.pid
childlogdir=/var/log/supervisor/
loglevel=info

[unix_http_server]
file=/var/run/supervisor.sock
chmod=0700

[supervisorctl]
serverurl=unix:///var/run/supervisor.sock

[rpcinterface:supervisor]
supervisor.rpcinterface_factory = supervisor.rpcinterface:make_main_rpcinterface

# Redis Server
[program:redis]
command=redis-server --bind 0.0.0.0 --port 6379
autorestart=true
autostart=true
stdout_logfile=/var/log/supervisor/redis.log
stderr_logfile=/var/log/supervisor/redis.log
stdout_logfile_maxbytes=50MB
stderr_logfile_maxbytes=50MB
stdout_logfile_backups=5
stderr_logfile_backups=5

# Nginx Web Server
[program:nginx]
command=nginx -g "daemon off;"
autorestart=true
autostart=true
stdout_logfile=/var/log/supervisor/nginx.log
stderr_logfile=/var/log/supervisor/nginx.log
stdout_logfile_maxbytes=50MB
stderr_logfile_maxbytes=50MB
stdout_logfile_backups=5
stderr_logfile_backups=5

# Flask Backend API
[program:flask-backend]
command=python backend/run.py
directory=/app
autorestart=true
autostart=true
stdout_logfile=/var/log/supervisor/flask.log
stderr_logfile=/var/log/supervisor/flask.log
stdout_logfile_maxbytes=50MB
stderr_logfile_maxbytes=50MB
stdout_logfile_backups=5
stderr_logfile_backups=5
environment=FLASK_ENV=production,PYTHONPATH=/app,PYTHONUNBUFFERED=1
user=guardify
priority=200

# Celery Worker for Video Analysis
[program:celery-worker]
command=celery -A backend.celery_app worker --loglevel=info --pool=solo --queues=analysis --concurrency=1
directory=/app
autorestart=true
autostart=true
stdout_logfile=/var/log/supervisor/celery.log
stderr_logfile=/var/log/supervisor/celery.log
stdout_logfile_maxbytes=50MB
stderr_logfile_maxbytes=50MB
stdout_logfile_backups=5
stderr_logfile_backups=5
environment=PYTHONPATH=/app,PYTHONUNBUFFERED=1,C_FORCE_ROOT=true
user=guardify
priority=300
killasgroup=true
stopasgroup=true

# Celery Flower Monitoring
[program:celery-flower]
command=celery -A backend.celery_app flower --port=5555 --basic_auth=admin:guardify123
directory=/app
autorestart=true
autostart=true
stdout_logfile=/var/log/supervisor/flower.log
stderr_logfile=/var/log/supervisor/flower.log
stdout_logfile_maxbytes=50MB
stderr_logfile_maxbytes=50MB
stdout_logfile_backups=5
stderr_logfile_backups=5
environment=PYTHONPATH=/app,PYTHONUNBUFFERED=1
user=guardify
priority=400

# Video Recording Service
[program:video-recorder]
command=python backend/video/main.py
directory=/app
autorestart=true
autostart=true
stdout_logfile=/var/log/supervisor/video.log
stderr_logfile=/var/log/supervisor/video.log
stdout_logfile_maxbytes=50MB
stderr_logfile_maxbytes=50MB
stdout_logfile_backups=5
stderr_logfile_backups=5
environment=PYTHONPATH=/app,PYTHONUNBUFFERED=1
user=guardify
priority=500

# Data Science Analysis Service (optional, for continuous monitoring)
[program:data-science-monitor]
command=python data_science/src/main.py --continuous-mode --camera-name CAMERA_01
directory=/app
autorestart=false
autostart=false
stdout_logfile=/var/log/supervisor/data-science.log
stderr_logfile=/var/log/supervisor/data-science.log
stdout_logfile_maxbytes=50MB
stderr_logfile_maxbytes=50MB
stdout_logfile_backups=5
stderr_logfile_backups=5
environment=PYTHONPATH=/app,PYTHONUNBUFFERED=1
user=guardify
priority=600

# Health Check Service
[program:health-check]
command=python -c "
import time
import requests
while True:
    try:
        requests.get('http://localhost:8574/app/health', timeout=5)
        print('Health check passed')
    except Exception as e:
        print(f'Health check failed: {e}')
    time.sleep(30)
"
directory=/app
autorestart=true
autostart=true
stdout_logfile=/var/log/supervisor/health-check.log
stderr_logfile=/var/log/supervisor/health-check.log
stdout_logfile_maxbytes=10MB
stderr_logfile_maxbytes=10MB
stdout_logfile_backups=3
stderr_logfile_backups=3
environment=PYTHONPATH=/app,PYTHONUNBUFFERED=1
user=guardify
priority=999